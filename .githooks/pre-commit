#!/bin/sh

STAGED_FILES_F=$(git diff --cached --name-only --diff-filter=ACM | grep ".tsx\{0,1\}"| grep "frontend\{0,1\}")
STAGED_FILES_B=$(git diff --cached --name-only --diff-filter=ACM | grep ".ts\{0,1\}" | grep "backend\{0,1\}")

ESLINT_F="$(git rev-parse --show-toplevel)/frontend/node_modules/.bin/eslint"
ESLINT_B="$(git rev-parse --show-toplevel)/backend/node_modules/.bin/eslint"
  

if [[ ("$STAGED_FILES_F" == "") && ("$STAGED_FILES_B" == "") ]]; then
  exit 0
fi

PASS=true

echo "\nValidating TypeScript:\n"

# Check for eslint

if [[ (! -x "$ESLINT_F") || (! -x "$ESLINT_B")  ]]; then
  echo "\t\033[41mPlease install ESlint\033[0m (npm i --save --save-exact --dev eslint)"
  exit 1
fi

#which eslint &> /dev/null
#if [[ "$?" == 1 ]]; then
#  echo "\t\033[41mPlease install ESlint\033[0m"
#  exit 1
#fi

for FILE in $STAGED_FILES_F
do
  "$ESLINT_F" "$FILE" "--quiet --max-warnings=0"

  if [[ "$?" == 0 ]]; then
    echo "\t\033[32mESLint Passed: $FILE\033[0m"
  else
    echo "\t\033[41mESLint Failed: $FILE\033[0m"
    PASS=false
  fi
done

for FILE in $STAGED_FILES_B
do
  "$ESLINT_B" "$FILE" "--quiet --max-warnings=0"

  if [[ "$?" == 0 ]]; then
    echo "\t\033[32mESLint Passed: $FILE\033[0m"
  else
    echo "\t\033[41mESLint Failed: $FILE\033[0m"
    PASS=false
  fi
done

echo "\nValidation completed!\n"

if ! $PASS; then
  echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n You can fix the errors by running : npm run lint-fix"
  exit 1
else
  echo "\033[42mCOMMIT SUCCEEDED\033[0m\n"
fi

exit $?